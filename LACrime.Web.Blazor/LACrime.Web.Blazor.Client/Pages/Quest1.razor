@page "/Quest1"
@using BlazorBootstrap
@using LACrimes.Web.Blazor.Shared
@using LACrimes.Web.Blazor.Shared.Quest
@using System.ComponentModel.DataAnnotations
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@rendermode InteractiveAuto

<h3>Quest 1</h3>

<h6>Find the total number of reports per “Crm Cd” that occurred within a specified time range and sort them in a descending order.</h6>

<div>
    <label for="startDate">Start Date:</label>
    <input type="date" id="startDate" @bind="startDate" />

    <label for="endDate">End Date:</label>
    <input type="date" id="endDate" @bind="endDate" />

    <button @onclick="FetchReports">Get Reports</button>
</div>

@if (quest1ReportDto != null)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Crime Code</th>
                <th>Crime Description</th>
                <th>Total Reports</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var report in quest1ReportDto)
            {
                <tr>
                    <td>@report.CrmCd</td>
                    <td>@report.CrimeDescription</td>
                    <td>@report.TotalReports</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private DateTime startDate = DateTime.Today;
    private DateTime endDate = DateTime.Today;
    private List<Quest1ReportDto>? quest1ReportDto = null;

    private async Task FetchReports()
    {
        var apiUrl = $"api/quests/Quest1?startDate={startDate:yyyy-MM-dd}&endDate={endDate:yyyy-MM-dd}";
        var response = await httpClient.GetFromJsonAsync<List<Quest1ReportDto>>(apiUrl);
        if (response is null)
        {
            await jsRuntime.InvokeVoidAsync("alert", "No data found");
            return;
        }
        quest1ReportDto = response.OrderByDescending(r => r.TotalReports).ToList();
    }
}
