@page "/quest9"
@using System.Net.Http.Json
@using LACrimes.Web.Blazor.Shared.Quest
@using System.Text.Json
@inject HttpClient Http
@inject IJSRuntime jsRuntime

<h3>Quest 9</h3>
<h6>Find the most common type of weapon used against victims depending on their age group.</h6>

<button @onclick="GetQuest9Data">Get Reports</button>

@if (isLoading)
{
    <div class="spinner-border text-secondary" role="status">
    </div>
}

@if (quest9Reports != null)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Age Group</th>
                <th>Weapon Code</th>
                <th>Weapon Description</th>
                <th>Occurrences</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in quest9Reports)
            {
                <tr>
                    <td>@item.AgeGroup</td>
                    <td>@item.WeaponCode</td>
                    <td>@item.WeaponDescription</td>
                    <td>@item.Count</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool isLoading = false;
    private List<Quest9ReportDto>? quest9Reports;

    private async Task GetQuest9Data()
    {
        try
        {
            isLoading = true;
            var response = await Http.GetFromJsonAsync<List<Quest9ReportDto>>("api/Quests/Quest9");
            isLoading = false;
            if (response is null || !response.Any())
            {
                await jsRuntime.InvokeVoidAsync("alert", "No data found");
                return;
            }
            quest9Reports = response;
        }
        catch (HttpRequestException ex)
        {
            await jsRuntime.InvokeVoidAsync("alert", ex.Message);
            isLoading = false;
        }
        catch (JsonException ex)
        {
            await jsRuntime.InvokeVoidAsync("alert", "No report Found");
            isLoading = false;
        }
        catch (Exception ex)
        {
            await jsRuntime.InvokeVoidAsync("alert", ex.Message);
            isLoading = false;
        }
    }
}
