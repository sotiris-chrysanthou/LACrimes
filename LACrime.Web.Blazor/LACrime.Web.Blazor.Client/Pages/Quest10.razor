@page "/quest10"
@using System.Net.Http.Json
@using System.Text.Json
@using LACrimes.Web.Blazor.Shared.Quest
@inject HttpClient Http
@inject IJSRuntime jsRuntime

<h3>Quest 10</h3>
<h6>Find the area and Rpt Dist No with the longest time range without an occurrence of a specific crime.</h6>

<div>
    <label for="crimeCode">Crime Code:</label>
    <input type="number" id="crimeCode" @bind="crimeCode" />

    <button @onclick="GetQuest10Data">Get Report</button>
</div>

@if (isLoading)
{
    <div class="spinner-border text-secondary" role="status">
    </div>
}

@if (quest10Report != null)
{
    <h4>Area Report</h4>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Area Name</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Gap Days</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@quest10Report.AreaReport?.AreaName</td>
                <td>@quest10Report.AreaReport?.StartDate.ToShortDateString()</td>
                <td>@quest10Report.AreaReport?.EndDate.ToShortDateString()</td>
                <td>@quest10Report.AreaReport?.GapDays</td>
            </tr>
        </tbody>
    </table>

    <h4>Rpt Dist No Report</h4>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Rpt Dist No</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Gap Days</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@quest10Report.RptDistNoReport?.RptDistNo</td>
                <td>@quest10Report.RptDistNoReport?.StartDate.ToShortDateString()</td>
                <td>@quest10Report.RptDistNoReport?.EndDate.ToShortDateString()</td>
                <td>@quest10Report.RptDistNoReport?.GapDays</td>
            </tr>
        </tbody>
    </table>
}

@code {
    private bool isLoading = false;
    private int crimeCode;
    private Quest10ReportDto? quest10Report;

    private async Task GetQuest10Data()
    {
        if (crimeCode <= 0)
        {
            await jsRuntime.InvokeVoidAsync("alert", "Please enter a valid Crime Code");
            return;
        }

        try
        {
            isLoading = true;
            quest10Report = await Http.GetFromJsonAsync<Quest10ReportDto>($"api/Quests/Quest10?crimeCode={crimeCode}");
            isLoading = false;

            if (quest10Report == null)
            {
                await jsRuntime.InvokeVoidAsync("alert", "No data found");
            }
        }
        catch (HttpRequestException ex)
        {
            await jsRuntime.InvokeVoidAsync("alert", ex.Message);
            isLoading = false;
        }
        catch (JsonException)
        {
            await jsRuntime.InvokeVoidAsync("alert", "No report found");
            isLoading = false;
        }
        catch (Exception ex)
        {
            await jsRuntime.InvokeVoidAsync("alert", ex.Message);
            isLoading = false;
        }
    }
}
