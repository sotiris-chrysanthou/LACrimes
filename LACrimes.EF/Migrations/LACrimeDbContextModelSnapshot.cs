// <auto-generated />
using System;
using LACrimes.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LACrimes.EF.Migrations
{
    [DbContext(typeof(LACrimeDbContext))]
    partial class LACrimeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LACrimes.Model.Area", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.Coordinates", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<double>("Lat")
                        .HasPrecision(7, 4)
                        .HasColumnType("double precision")
                        .HasColumnName("Lat");

                    b.Property<double>("Lon")
                        .HasPrecision(7, 4)
                        .HasColumnType("double precision")
                        .HasColumnName("Lon");

                    b.HasKey("ID");

                    b.ToTable("Coordinates", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.Crime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("Code");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Desc");

                    b.HasKey("ID");

                    b.ToTable("Crime", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.CrimeRecord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<Guid>("CoordinatesID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Crime1ID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Crime2ID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Crime3ID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CrossStreetID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOcc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateOcc");

                    b.Property<DateTime>("DateRptd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateRptd");

                    b.Property<int>("DrNo")
                        .HasColumnType("integer")
                        .HasColumnName("DrNo");

                    b.Property<Guid?>("PremisID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("StatusID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("StreetID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SubAreaID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("VictimID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WeaponID")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("CoordinatesID");

                    b.HasIndex("Crime1ID");

                    b.HasIndex("Crime2ID");

                    b.HasIndex("Crime3ID");

                    b.HasIndex("CrossStreetID");

                    b.HasIndex("DrNo")
                        .IsUnique();

                    b.HasIndex("ID")
                        .IsUnique();

                    b.HasIndex("PremisID");

                    b.HasIndex("StatusID");

                    b.HasIndex("StreetID");

                    b.HasIndex("SubAreaID");

                    b.HasIndex("VictimID");

                    b.HasIndex("WeaponID");

                    b.ToTable("CrimeRecord", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.Premis", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("Code");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Desc");

                    b.HasKey("ID");

                    b.ToTable("Premis", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.Status", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("Code");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Desc");

                    b.HasKey("ID");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.Street", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.ToTable("Street", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.SubArea", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<Guid>("AreaID")
                        .HasColumnType("uuid");

                    b.Property<int>("RpdDistNo")
                        .HasColumnType("integer")
                        .HasColumnName("RpdDistNo");

                    b.HasKey("ID");

                    b.HasIndex("AreaID");

                    b.ToTable("SubArea", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.Victim", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("Age");

                    b.Property<char>("Descent")
                        .HasColumnType("character(1)")
                        .HasColumnName("Descent");

                    b.Property<char>("Sex")
                        .HasColumnType("character(1)")
                        .HasColumnName("Sex");

                    b.HasKey("ID");

                    b.ToTable("Victim", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.Weapon", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ID");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("Code");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Desc");

                    b.HasKey("ID");

                    b.ToTable("Weapon", (string)null);
                });

            modelBuilder.Entity("LACrimes.Model.CrimeRecord", b =>
                {
                    b.HasOne("LACrimes.Model.Coordinates", "Coordinates")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("CoordinatesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LACrimes.Model.Crime", "Crime1")
                        .WithMany("CrimeRecordsCrime1")
                        .HasForeignKey("Crime1ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LACrimes.Model.Crime", "Crime2")
                        .WithMany("CrimeRecordsCrime2")
                        .HasForeignKey("Crime2ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.Crime", "Crime3")
                        .WithMany("CrimeRecordsCrime3")
                        .HasForeignKey("Crime3ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.Street", "CrossStreet")
                        .WithMany("CrimeRecordsCrossStreet")
                        .HasForeignKey("CrossStreetID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.Premis", "Premis")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("PremisID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.Status", "Status")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.Street", "Street")
                        .WithMany("CrimeRecordsStreet")
                        .HasForeignKey("StreetID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.SubArea", "SubArea")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("SubAreaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.Victim", "Victim")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("VictimID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LACrimes.Model.Weapon", "Weapon")
                        .WithMany("CrimeRecords")
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Coordinates");

                    b.Navigation("Crime1");

                    b.Navigation("Crime2");

                    b.Navigation("Crime3");

                    b.Navigation("CrossStreet");

                    b.Navigation("Premis");

                    b.Navigation("Status");

                    b.Navigation("Street");

                    b.Navigation("SubArea");

                    b.Navigation("Victim");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("LACrimes.Model.SubArea", b =>
                {
                    b.HasOne("LACrimes.Model.Area", "Area")
                        .WithMany("SubAreas")
                        .HasForeignKey("AreaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("LACrimes.Model.Area", b =>
                {
                    b.Navigation("SubAreas");
                });

            modelBuilder.Entity("LACrimes.Model.Coordinates", b =>
                {
                    b.Navigation("CrimeRecords");
                });

            modelBuilder.Entity("LACrimes.Model.Crime", b =>
                {
                    b.Navigation("CrimeRecordsCrime1");

                    b.Navigation("CrimeRecordsCrime2");

                    b.Navigation("CrimeRecordsCrime3");
                });

            modelBuilder.Entity("LACrimes.Model.Premis", b =>
                {
                    b.Navigation("CrimeRecords");
                });

            modelBuilder.Entity("LACrimes.Model.Status", b =>
                {
                    b.Navigation("CrimeRecords");
                });

            modelBuilder.Entity("LACrimes.Model.Street", b =>
                {
                    b.Navigation("CrimeRecordsCrossStreet");

                    b.Navigation("CrimeRecordsStreet");
                });

            modelBuilder.Entity("LACrimes.Model.SubArea", b =>
                {
                    b.Navigation("CrimeRecords");
                });

            modelBuilder.Entity("LACrimes.Model.Victim", b =>
                {
                    b.Navigation("CrimeRecords");
                });

            modelBuilder.Entity("LACrimes.Model.Weapon", b =>
                {
                    b.Navigation("CrimeRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
